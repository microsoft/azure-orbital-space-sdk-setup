{{- if .Values.services.core.switchboard.enabled }}
{{- $serviceValues := .Values.services.core.switchboard }}
{{- $globalValues := .Values.global }}
{{- $allServices := .Values.services }}
{{- $imgName := printf "%s/%s:%s" (include "spacefx.servicePrefixCalc" (dict "globalValues" $globalValues)) $serviceValues.repository (include "spacefx.serviceVersionCalc" (dict "globalValues" $globalValues "serviceValues" $serviceValues)) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $serviceValues.appName | quote }}
  namespace: {{ $serviceValues.serviceNamespace }}
spec:
  selector:
    name: {{ $serviceValues.appName | quote }}
  type: ClusterIP
  ports:
    - name: mqtt-port
      protocol: TCP
      port: 5672
      targetPort: 5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceValues.appName | quote }}
  namespace: {{ $serviceValues.serviceNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $serviceValues.appName | quote }}
  template:
    metadata:
      labels:
        app: {{ $serviceValues.appName | quote }}
        name: {{ $serviceValues.appName | quote }}
    spec:
      containers:
      - name: {{ $serviceValues.appName | quote }}
        image: {{ $imgName | quote}}
        imagePullPolicy: {{ $globalValues.imagePullPolicy }}
        {{- include "spacefx.resourceLimits" (dict "globalValues" $globalValues "serviceValues" $serviceValues) | indent 8  }}
        ports:
          - name: switchboard
            containerPort: 5672
{{- $mainContext := .Values }}
{{- $protectedTopics := list -}}
{{- $publishingScopes := list -}}
{{- range $key, $value := $mainContext.services.host }}
  {{- $appTopic := printf "DIRECTTOAPP-%s" $value.appName }}
  {{- $appTopicPublishing := printf "app=%s=%s" $value.appName $appTopic }}
  {{- $protectedTopics = append $protectedTopics $appTopic -}}
  {{- $publishingScopes = append $publishingScopes $appTopicPublishing -}}
{{- end }}
{{- range $key, $value := $mainContext.services.platform }}
  {{- $appTopic := printf "DIRECTTOAPP-%s" $value.appName }}
  {{- $appTopicPublishing := printf "%s=%s" $value.appName $appTopic }}
  {{- $protectedTopics = append $protectedTopics $appTopic -}}
  {{- $publishingScopes = append $publishingScopes $appTopicPublishing -}}
{{- end }}
{{- $protectedTopicsString := join "," $protectedTopics | upper -}}
{{- $publishingScopesString := join ";" $publishingScopes | upper -}}
{{- range .Values.global.namespaces.list }}
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: pubsub
  namespace:  {{ .namespace }}
spec:
  type: pubsub.rabbitmq
  version: v1
  metadata:
  - name: host
    value: "amqp://{{ $serviceValues.appName }}.coresvc:5672"
  - name: autoAck
    value: true
  - name: deliveryMode
    value: 0
  - name: prefetchCount
    value: 0
  - name: concurrencyMode
    value: parallel
  - name: backOffInitialInterval
    value: 100
  - name: backOffMaxRetries
    value: 16
  - name: enableDeadLetter # Optional enable dead Letter or not
    value: false
  - name: maxLen # Optional max message count in a queue
    value: 3000
  - name: maxLenBytes # Optional maximum length in bytes of a queue.
    value: 10485760
{{- if eq $globalValues.security.topicRestrictionEnabled true }}
  - name: protectedTopics
    value: "{{ $protectedTopicsString }}"
  - name: publishingScopes
    value: "{{ $publishingScopesString }}"
  - name: subscriptionScopes
    value: "{{ $publishingScopesString }}"
{{- end }}
{{- end }}
{{- end }}
